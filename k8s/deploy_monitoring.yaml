---
- name: Deploy Prometheus and Grafana
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
  - "ansible_vars.yaml"

  tasks:
    - name: Add Prometheus Helm repository
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts
      #  state: present

    - name: Install Prometheus using Helm
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: monitoring
        create_namespace: true

    - name: Add Grafana Helm repository
      kubernetes.core.helm_repository:
        name: grafana
        repo_url: https://grafana.github.io/helm-charts
      #  state: present

    - name: Install Grafana using Helm
      kubernetes.core.helm:
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: monitoring
        create_namespace: true
    #    values_files:
    #      - ./monitoring/grafana-values.yaml

    - name: Add Jetstack Helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io

    - name: Debug cert-manager installation
      debug:
        msg: "Install CRDs value: {{ install_crds_value | default('true') }}"

    - name: Install cert-manager using Helm
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        set_values:
          - installCRDs: "{{ install_crds_value | default(true) }}"
      register: cert_manager_installation 
      ignore_errors: yes

    - name: Debug cert-manager installation result
      debug:
        var: cert_manager_installation

    - name: Apply ClusterIssuer for Let's Encrypt
      kubernetes.core.k8s: 
        definition:
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt-prod
        spec:
          acme:
            email: "{{ email }}"
            privateKeySecretRef:
              name: letsencrypt-prod
            server: https://acme-v02.api.letsencrypt.org/directory
            solvers:
            - http01: {}
              ingress:
                class: nginx
      ignore_errors: yes

